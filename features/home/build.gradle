plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.antique.home'
    compileSdk Version.compileSdk

    defaultConfig {
        minSdk Version.minSdk
        targetSdk Version.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {
    implementation project(":features:common")

    implementation(AndroidX.CORE)
    implementation(AndroidX.APP_COMPAT)
    implementation(Google.MATERIAL)
    testImplementation(AndroidTest.JUNIT4)
    androidTestImplementation(AndroidTest.EXT_JUNIT)
    androidTestImplementation(AndroidTest.ESPRESSO_CORE)

    //navigation
    implementation(AndroidX.NAVIGATION_RUNTIME)
    implementation(AndroidX.NAVIGATION_FRAGMENT)
    implementation(AndroidX.NAVIGATION_UI)

    //lifecycle
    implementation(AndroidX.VIEW_MODEL)
    implementation(AndroidX.LIVE_DATA)

    //coroutines
    implementation(Kotlin.COROUTINES)

    //firebase
    implementation platform(Firebase.FIREBASE_BOM)
    implementation(Firebase.FIREBASE_AUTH)
    implementation(Google.GOOGLE_PLAY_SERVICE)
    implementation(Firebase.FIREBASE_REALTIME_DATABASE)
    implementation(Firebase.FIREBASE_STORAGE)

    //glide
    implementation(ThirdParty.GLIDE)
    kapt(ThirdParty.GLIDE_COMPILER)

    //swipe refresh layout
    implementation(AndroidX.SWIPE_REFRESH_LAYOUT)

    //recycler view
    implementation(AndroidX.RECYCLER_VIEW)

    //circle image view
    implementation(ThirdParty.CIRCULAR_IMAGE_VIEW)

    //dots indicator
    implementation(ThirdParty.DOTS_INDICATOR)
}